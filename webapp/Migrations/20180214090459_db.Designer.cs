// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using System;
using webapp.Models;
using webapp.Types;

namespace webapp.Migrations
{
    [DbContext(typeof(DbEntity))]
    [Migration("20180214090459_db")]
    partial class db
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("webapp.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateEnd");

                    b.Property<DateTime>("DateStart");

                    b.Property<string>("Description");

                    b.Property<string>("Title");

                    b.HasKey("EventId");

                    b.ToTable("events");
                });

            modelBuilder.Entity("webapp.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("Name");

                    b.HasKey("LocationId");

                    b.ToTable("locations");
                });

            modelBuilder.Entity("webapp.Models.Participant", b =>
                {
                    b.Property<int>("ParticipantId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int?>("Participant");

                    b.HasKey("ParticipantId");

                    b.HasIndex("Participant");

                    b.ToTable("participants");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Participant");
                });

            modelBuilder.Entity("webapp.Models.Group", b =>
                {
                    b.HasBaseType("webapp.Models.Participant");

                    b.Property<int>("GroupId");

                    b.Property<string>("Name");

                    b.ToTable("groups");

                    b.HasDiscriminator().HasValue("Group");
                });

            modelBuilder.Entity("webapp.Models.User", b =>
                {
                    b.HasBaseType("webapp.Models.Participant");

                    b.Property<bool>("Deleted");

                    b.Property<string>("FirstName");

                    b.Property<string>("Infix");

                    b.Property<string>("LastName");

                    b.Property<string>("Locale");

                    b.Property<int>("Role");

                    b.Property<int>("Type");

                    b.Property<int?>("User");

                    b.Property<int>("UserId");

                    b.HasIndex("User");

                    b.ToTable("users");

                    b.HasDiscriminator().HasValue("User");
                });

            modelBuilder.Entity("webapp.Models.Participant", b =>
                {
                    b.HasOne("webapp.Models.Event")
                        .WithMany("Participants")
                        .HasForeignKey("Participant");
                });

            modelBuilder.Entity("webapp.Models.User", b =>
                {
                    b.HasOne("webapp.Models.Group")
                        .WithMany("Users")
                        .HasForeignKey("User");
                });
#pragma warning restore 612, 618
        }
    }
}
